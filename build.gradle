/*
*  Copyright 2024 Google LLC
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      https://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*/


plugins {
	id 'application'
	id "maven-publish"
	id "com.diffplug.spotless" version "7.0.3"
	id 'com.palantir.git-version' version '3.2.0'
	id 'net.ltgt.errorprone' version "4.1.0"
}

ext {
	packageName = "bigquery-dataflow-cdc-example"
	javaPackagePath = "com.google.cloud.pso"
	appName = "RunPipeline"
	appVersion = "${gitVersion()}-SNAPSHOT"

	beamVersion = "2.64.0"

	slf4jVersion = "2.0.17"
	junitVersion = "4.13.2"
	hamcrestVersion = "3.0"
	autoValueVersion = '1.11.0'
	autoServiceVersion = '1.1.1'
	errorProneCoreVersion = '2.28.0'
	checkerVersion = '3.49.2'

	googleJavaFormat = '1.24.0'
}

repositories {
	mavenCentral()

	maven {  // Apache Snapshots repository
		url "https://repository.apache.org/content/repositories/snapshots/"
	}
}

application {
	mainClass = "${javaPackagePath}.${appName}"
	version = appVersion
}

test {
	// JUnit 4.
	useJUnit()
	dependsOn cleanTest
	testLogging.showStandardStreams = true
}

java {
toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

compileJava {
	options.compilerArgs.addAll(['-Xlint:deprecation', '-Xlint:unchecked'])
	options.errorprone.disableWarningsInGeneratedCode = true   // for @Generated
	options.errorprone.excludedPaths = ".*/build/generated/.*" // for other generated scenarios, e.g. Protobuf

}

run {
	if (project.hasProperty('args')) {
		args project.args.split('\\s')
	}
}

dependencies {
	// App dependencies.
	implementation "org.apache.beam:beam-sdks-java-core:${beamVersion}"
	runtimeOnly "org.apache.beam:beam-runners-direct-java:${beamVersion}"
	implementation "org.apache.beam:beam-runners-google-cloud-dataflow-java:${beamVersion}"
	implementation "org.apache.beam:beam-sdks-java-io-google-cloud-platform:${beamVersion}"


	implementation "org.slf4j:slf4j-jdk14:${slf4jVersion}"

	implementation "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
	annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

	implementation "com.google.auto.service:auto-service-annotations:${autoServiceVersion}"
	annotationProcessor "com.google.auto.service:auto-service:${autoServiceVersion}"

	// Tests dependencies.
	testImplementation "junit:junit:${junitVersion}"
	testImplementation "org.hamcrest:hamcrest:${hamcrestVersion}"
	testImplementation "org.apache.beam:beam-sdks-java-test-utils:${beamVersion}"


	implementation "org.checkerframework:checker-qual:${checkerVersion}"
	errorprone "com.google.errorprone:error_prone_core:${errorProneCoreVersion}"
}

// Package a self-contained jar file.
jar {
	archiveBaseName = packageName
	destinationDirectory = file('build')
	manifest {
		attributes 'Main-Class': "${javaPackagePath}.${appName}"
	}
	exclude 'META-INF/*.SF'
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	zip64 true
}


spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}

	flexmark {
	target '**/*.md' // you have to set the target manually
	flexmark() // or flexmark('0.64.8') // version is optional
	}

	java {
		target project.fileTree(project.rootDir) {
			include '**/*.java'
			exclude 'build/*'
			exclude 'bin/*' // for vs code generated code
		}

		// apply a specific flavor of google-java-format
		googleJavaFormat("${googleJavaFormat}").reflowLongStrings()

		// make sure every file has the following copyright header.
		licenseHeader '''/*
 *  Copyright 2024 Google LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

'''
	}
}
